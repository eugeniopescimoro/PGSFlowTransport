from operator import itemgetter
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.image as img
import os
import re
cl = []
lcorr = []
mvel = []
for i in range(1, 31): # Range of simulations which should be plotted
    os.chdir('TS%d/system' % i)
    with open("setRandomFieldDict") as RF:
        for line in RF:
            if "Lcorr" in line:
                lcorr.append([float(i) for i in re.split(' |\(|\)', line)[slice(12, 15)]])
                break
    os.chdir('..')
    with open("log") as log:
        for _ in range(10): # It skips the first 225 to avoid some misleading "Time =" occurencies
            next(log)
        for line in log: # It greps all the relevant data from the log file
            if "Mean velocity  =" in line:
                mvel.append([float(i) for i in re.split(' |\(|\)', line)[slice(5, 8)]])
                break
    os.chdir('..')
with open("corrLengths.mat") as CL:
    for line in CL:
        if not any(value in line for value in "#"):
                cl.append([float(i) for i in re.split(' ', line)[slice(1, 4)]])
    cl = [sublist for sublist in cl if any(sublist)] # It deletes the empty sublists generated by Octave
x = list(map(itemgetter(0), cl))
y = list(map(itemgetter(1), cl))
z = list(map(itemgetter(2), cl))
plt.rc('font', size=40)
fig1 = plt.figure(figsize=(14, 14))
ax = fig1.add_subplot(1, 1, 1)
ax.plot(list([i for i in range(10)]), list(map(itemgetter(0), mvel[:10])), 'ro')
ax.plot(list([i for i in range(10, 20)]), list(map(itemgetter(0), mvel[10:20])), 'bo')
ax.plot(list([i for i in range(20, 30)]), list(map(itemgetter(0), mvel[20:30])), 'go')
ax.set_xlabel('Simulation number [-]')
ax.set_ylabel('Average Vx [m/s]')
ax.ticklabel_format(axis = 'y', style = 'sci', scilimits = (0,0))
ax.set_ylim([0.5e-5, 2.1e-5])
plt.tight_layout()
fig1.savefig("aveVxPeriodic.pdf")
plt.show()
fig2 = plt.figure(figsize=(14, 14))
ax = fig2.add_subplot(1, 1, 1)
ax.plot(list([i for i in range(10)]), list(map(itemgetter(1), mvel[:10])), 'ro')
ax.plot(list([i for i in range(10, 20)]), list(map(itemgetter(1), mvel[10:20])), 'bo')
ax.plot(list([i for i in range(20, 30)]), list(map(itemgetter(1), mvel[20:30])), 'go')
ax.set_xlabel('Simulation number [-]')
ax.set_ylabel('Average Vy [m/s]')
ax.set_ylim([-5.5e-7, 3.5e-7])
plt.tight_layout()
fig2.savefig("aveVyPeriodic.pdf")
plt.show()
fig3 = plt.figure(figsize=(14, 14))
ax = fig3.add_subplot(1, 1, 1)
ax.plot(list([i for i in range(10)]), list(map(itemgetter(2), mvel[:10])), 'ro')
ax.plot(list([i for i in range(10, 20)]), list(map(itemgetter(2), mvel[10:20])), 'bo')
ax.plot(list([i for i in range(20, 30)]), list(map(itemgetter(2), mvel[20:30])), 'go')
ax.set_xlabel('Simulation number [-]')
ax.set_ylabel('Average Vz [m/s]')
ax.set_ylim([-5.5e-7, 3.5e-7])
plt.tight_layout()
fig3.savefig("aveVzPeriodic.pdf")
plt.show()